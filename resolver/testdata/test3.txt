Auswahl X

@Ereignis
Auswahl X {Y,Z}

@Ereignis
struct  X {Y}

@Extern
Aggregat Bla {

   @Ereignis
    Verbund  X {Y}


    Verbund Person {
           Vorname, Nachname
       }
}


Typ Einkäufer = Person

Synonym Nachname = Liste[Vorname]



Auswahl AppFehler {
            A.B,B,C oder D or E
    }

@Fehler
@extern
@ "yo yo = oy"
@"Todo blabla"
 enum AppFehler {
        A, B, C |D
    }


    "This is the doc."
    @extern
    fn RechnungStellen




    fn RechnungStellen Zeitlogs -> (Zeitlogs2, Zeitlogs3)

    Ansicht MergeUIState(Liste[Stand]) -> (Nutzer["Ausgewählter Stand"] | Abbruch,Abbruch)

    Arbeitsablauf FotoMachen(QRCode) -> Foto|Abbruch

    Aufgabe "Falle Kennzeichen"(QRCode) -> Foto|Explosion {
        FotoMachen(QRCode)
        wenn "FotoMachen == Abbruch" -> Explosion
    }

    "Rechnung stellen ist was super tolles."
    @extern
    Aufgabe "Rechnung stellen" (Zeitlogs)-> (manuell["Erstellte Rechnung"])

    fn ImmoFinanzScoringSpeichern(EingereichterAntrag,ImmoFinanzScoring)

    "super doc"
    fn Speichern(xyz.Box[context.Antrag], Antrag|List[Betrag]|Cetrag) -> (X | Y) {

        if "abc" -> X
        wenn "abc" {
            "Rechnung stellen"
            context."Rechnung stellen"(x,y)
            -> (Y,X)
        } sonst{
            -> Fehler
        }

        wenn x -> x sonst -> y
    }

Kontext Rechnungsgenerator {



}

"blabla"
Kontext X

Kontext Y {}

Kontext Z{
	Typ Z
}